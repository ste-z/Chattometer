chrome.runtime.onMessage.addListener(((e,t,o)=>{if("calculateImpact"===e.action){console.log("Background script received 'calculateImpact' request:",JSON.stringify(e,null,2));const t={model:"gpt-4o",tokens:e.tokens};return console.log("Sending request to backend:",JSON.stringify(t,null,2)),fetch("https://chattometer.onrender.com/calculate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>e.ok?e.json():e.text().then((t=>{throw console.error(`Backend responded with error: ${e.status}`,t),new Error(`Backend Error: ${e.status} - ${t}`)})))).then((t=>{console.log("Received successful data from backend:",JSON.stringify(t,null,2));const s=(t.impacts.energy_kWh.min+t.impacts.energy_kWh.max)/2*1e3,a=(t.impacts.gwp_kgCO2eq.min+t.impacts.gwp_kgCO2eq.max)/2*1e3;chrome.storage.local.get(["cumulativeRequests","processedTokens"],(t=>{const o=t.cumulativeRequests||{},r=t.processedTokens||{},n=new URL(e.url),c=`${n.origin}${n.pathname}`;o[c]||(o[c]={energyWh:0,ghgG:0,tokens:0,timestamp:new Date(e.timestamp).toISOString()});const i=r[c]||0,l=e.tokens,m=l-i;if(m>0){const e=s/l,t=a/l;o[c].energyWh+=e*m,o[c].ghgG+=t*m,o[c].tokens=l,r[c]=l}chrome.storage.local.set({cumulativeRequests:o,processedTokens:r})})),chrome.storage.local.get(["lastImpactDataMap","lastRequestMap"],(s=>{const a=s.lastImpactDataMap||{},r=s.lastRequestMap||{},n=new URL(e.url),c=`${n.origin}${n.pathname}`;a[c]=t,r[c]={model:e.modelName,tokens:e.tokens,timestamp:e.timestamp,url:e.url},chrome.storage.local.set({lastImpactDataMap:a,lastRequestMap:r},(()=>{console.log("Saved impact data map and request map to storage"),o({success:!0,data:t})}))}))})).catch((e=>{console.error("Error during fetch or processing in background:",e),console.log("Sending error response to content script."),o({success:!1,error:e.message})})),!0}})),console.log("Chattometer background script loaded"),chrome.webNavigation.onHistoryStateUpdated.addListener((e=>{chrome.tabs.sendMessage(e.tabId,{action:"reinitializeChattometer"},(()=>{chrome.runtime.lastError&&console.warn("Error sending reinit message to content script:",chrome.runtime.lastError.message)}))}));